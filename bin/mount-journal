#!/bin/bash
die() { echo "$*" >&2 ; exit 1 ; }
here="$(dirname "$(basename "$0")")"
source="$here/Journal"
target="$here/Journal.mount"
editorCommand="${JOURNAL_EDITOR:-hx}"

trap_close() {
    sleep 1
}

open_journal() {
    if mountpoint -q "$target" ; then
        die "Already mounted."
    fi
    mkdir -p "$target" || die "Failed to create $target"
    sudo cryptsetup luksOpen "$source" journal || die "Failed to open $source"
    sudo mount "/dev/mapper/journal" "$target" || die "Failed to mount"
}

open_editor() {
    if [ -n "$editorFlatpak" ]; then
        flatpak list --app | grep -q "$editorFlatpak" || \
            die "$editorFlatpak not installed"
        flatpak run "$editorFlatpak" "$target" >/dev/null 2>&1
    elif [ -n "$editorCommand" ]; then
        "$editorCommand" "$target"
        if [ "$editorCommand" == "code" ]; then
            echo "'code' doesn't open synchronously, so press Ctrl+C to " \
                "re-lock the journal."
            trap 'trap_close' SIGINT
            cat || :
        fi
    else
        die "Need to specify editorCommand or editorFlatpak"
    fi
}

open_editor_async() {
    if [ -n "$editorFlatpak" ]; then
        if flatpak list --app | grep -q "$editorFlatpak"; then
            nohup flatpak run "$editorFlatpak" "$target" >/dev/null 2>&1 &
        fi
    elif [ -n "$editorCommand" ]; then
        nohup "$editorCommand" "$target" >/dev/null 2>&1 &
    else
        die "Need to specify editorCommand or editorFlatpak"
    fi
}

close_journal() {
    sudo umount "$target" || die "Failed to umount $target"
    sudo cryptsetup luksClose journal || die "Failed to close"
}

check_closed() {
    # ensure all files are gone!
    wc="$(find "$target" -mindepth 1 | wc -l)"
    if [ "$wc" != "0" ]; then
        echo "Warning: directory doesn't appear to be empty!" >&2
    fi

    echo | xclip # clear clipboard, just in case
}

if [ "$1" == "open" ]; then
    open_journal
    open_editor_async
elif [ "$1" == "close" ]; then
    close_journal
    check_closed
elif [ -z "$1" ]; then
    open_journal
    open_editor
    close_journal
    check_closed
else
    die "Expected: open or close"
fi

